name: CI

on:
  release:
  pull_request:

jobs:
  linux-x86-natives:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache natives
        uses: actions/cache@v2
        id: cache-natives
        with:
          path: |
            src/main/resources/natives/linux-x86
            src/main/resources/natives/linux-x86-64
            src/main/resources/natives/linux-musl-x86-64
          key: linux-x86-${{ hashFiles('natives/**') }}
      - name: Set up JDK
        uses: actions/setup-java@v1
        if: steps.cache-natives.outputs.cache-hit != 'true'
        with:
          java-version: 16
      - name: Install x86 compilers
        if: steps.cache-natives.outputs.cache-hit != 'true'
        run: |
          sudo apt update
          sudo apt install libc6-dev-i386 linux-libc-dev g++-multilib
          curl -sL https://github.com/natanbc/actions-binaries/releases/download/1/x86_64-linux-musl-cross.tgz -o - | tar xzf -
      - name: Build x86 natives
        if: steps.cache-natives.outputs.cache-hit != 'true'
        run: |
          chmod +x gradlew
          export PATH="$PATH:$(pwd)/x86_64-linux-musl-cross/bin"
          ./gradlew buildLinuxGlibc32 buildLinuxGlibc64 buildLinuxMusl64
      - uses: actions/upload-artifact@v2
        with:
          name: linux-x86-natives
          path: src/main/resources/natives/*
  build:
    needs: [linux-x86-natives]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p src/main/resources/natives
      - uses: actions/download-artifact@v2
        with:
          name: linux-x86-natives
          path: src/main/resources/natives/
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
           java-version: 16
      - name: Compile java
        run: |
          chmod +x gradlew
          # this builds the java code without building the natives
          ./gradlew publishToMavenLocal
      - uses: actions/upload-artifact@v2
        with:
          name: jar
          path: build/libs/*.jar
      - name: Jfrog upload
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          export TAG="$(echo $GITHUB_REF | grep -q refs/tags && echo ${GITHUB_REF/refs\/tags\/} || echo '')"
          if [ "$TAG" != "" ]; then
            ./gradlew publish
          fi
        env:
          JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
          JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
